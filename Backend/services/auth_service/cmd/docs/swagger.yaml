basePath: /api/v1
definitions:
  auth_internal_delivery_http_dto.LoginRequest:
    properties:
      identification:
        type: string
      password:
        type: string
    required:
    - identification
    - password
    type: object
  auth_internal_delivery_http_dto.MessageResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  auth_internal_delivery_http_dto.RefreshRequest:
    properties:
      refresh_token:
        type: string
    type: object
  auth_internal_delivery_http_dto.RefreshResponse:
    properties:
      access_token:
        type: string
    type: object
  auth_internal_delivery_http_dto.RegisterUser:
    properties:
      country:
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      username:
        type: string
    required:
    - email
    - full_name
    - password
    - username
    type: object
  auth_internal_delivery_http_dto.SessionResponseDTO:
    properties:
      id:
        type: string
      ip:
        type: string
      last_used_at:
        type: string
      user_agent:
        type: string
      user_id:
        type: string
    type: object
  auth_internal_delivery_http_dto.UserDto:
    properties:
      country:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      is_verified:
        type: boolean
      phone_number:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the API for the Community App's authentication service.
  title: Authentication Service API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns access and refresh tokens.
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/auth_internal_delivery_http_dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.UserDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
      summary: Login a user
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes an expired access token using a valid refresh token.
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth_internal_delivery_http_dto.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.RefreshResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user with email, password, and other details.
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth_internal_delivery_http_dto.RegisterUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.UserDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
      summary: Register a new user
      tags:
      - auth
  /sessions/all-except:
    delete:
      description: Logs out all other active sessions for the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
      security:
      - Bearer: []
      summary: Logout all sessions except the current one
      tags:
      - sessions
  /sessions/get-session:
    get:
      description: Retrieves a specific session by its ID for the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.SessionResponseDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
      security:
      - Bearer: []
      summary: Get a specific session
      tags:
      - sessions
  /sessions/logout:
    delete:
      description: Logs out the authenticated session by its ID.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
      security:
      - Bearer: []
      summary: Logout a specific session
      tags:
      - sessions
  /sessions/me:
    get:
      description: Retrieves a list of all active sessions for the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/auth_internal_delivery_http_dto.SessionResponseDTO'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
      security:
      - Bearer: []
      summary: Get all active sessions for a user
      tags:
      - sessions
  /user/is-verified:
    get:
      description: Checks the verification status of the user authenticated by the
        JWT token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.UserDto'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
      security:
      - Bearer: []
      summary: Check if authenticated user is verified
      tags:
      - user
  /user/me:
    get:
      description: Retrieves the profile of the user authenticated by the JWT token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.UserDto'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/auth_internal_delivery_http_dto.MessageResponse'
      security:
      - Bearer: []
      summary: Get authenticated user's profile
      tags:
      - user
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
